{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","helper.ts","index.tsx"],"names":["todos","userId","id","title","completed","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","UserInfo","user","className","TodoInfo","todo","useState","setCompleted","type","checked","onChange","TodoList","map","App","todosFromServer","setTodos","todoTitle","setTodoTitle","setUserId","hasTitleError","setHasTitleError","hasHasUserIdError","setHasUserIdError","preparedTodos","useMemo","find","prepareTodos","usersFromServer","onSubmit","event","preventDefault","prev","Math","max","placeholder","value","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c799804.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './UserInfo.scss';\n\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <div className=\"todo-list__user-info card\">\n    <h3 className=\"card__name\">{user.name}</h3>\n  </div>\n);\n","import React, { useState } from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { PreparedTodo } from '../../types/PreparedTodo';\n\ninterface Props {\n  todo: PreparedTodo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const [completed, setCompleted] = useState(todo.completed);\n\n  const toggleStatus = () => (\n    setCompleted(!completed)\n  );\n\n  return (\n    <li\n      className={`todo-list__item ${\n        completed\n          ? 'todo-list__item--completed'\n          : ''\n      }`}\n      key={todo.id}\n    >\n      <h2 className=\"todo-list__title\">{todo.title}</h2>\n\n      <div className=\"todo-list__status\">\n        <span>\n          {`Status: ${completed ? 'completed' : 'waiting'}`}\n        </span>\n\n        <input\n          type=\"checkbox\"\n          id=\"status\"\n          name=\"status\"\n          checked={completed}\n          onChange={toggleStatus}\n        />\n      </div>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </li>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\n\nimport { PreparedTodo } from '../../types/PreparedTodo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </ul>\n);\n","import React, { useMemo, useState } from 'react';\n\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { prepareTodos } from './helper';\nimport { TodoList } from './components/TodoList';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState(() => [...todosFromServer]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(-1);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasHasUserIdError, setHasUserIdError] = useState(false);\n\n  const addTodo = () => {\n    setTodos(prev => (\n      [\n        ...prev,\n        {\n          userId,\n          id: Math.max(...prev.map(todo => todo.id)),\n          title: todoTitle,\n          completed: false,\n        },\n      ]\n    ));\n  };\n\n  const reset = () => {\n    setTodoTitle('');\n    setUserId(-1);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLFormElement | HTMLSelectElement>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'todo-title':\n        setHasTitleError(false);\n        setTodoTitle(value);\n        break;\n\n      case 'todo-user-selector':\n        setHasUserIdError(false);\n        setUserId(+value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (userId !== -1 && todoTitle) {\n      addTodo();\n      reset();\n    }\n\n    if (!todoTitle) {\n      setHasTitleError(true);\n    }\n\n    if (userId === -1) {\n      setHasUserIdError(true);\n    }\n  };\n\n  const preparedTodos = useMemo(() => (\n    prepareTodos(todos, usersFromServer)\n  ), [todos]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"App__title\">Add todo form</h1>\n        <form\n          className=\"App__form form\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"form__item\">\n            <input\n              id=\"todo-title\"\n              name=\"todo-title\"\n              type=\"text\"\n              className=\"form__todo-title\"\n              placeholder=\"Type todo\"\n              value={todoTitle}\n              onChange={(event) => {\n                setTodoTitle(event.target.value);\n              }}\n            />\n\n            {hasTitleError && (\n              <div\n                className=\"form__error\"\n              >\n                Is empty\n              </div>\n            )}\n          </div>\n\n          <div className=\"form__item\">\n            <select\n              id=\"todo-user-selector\"\n              name=\"todo-user-selector\"\n              className=\"form__user-selector\"\n              value={userId}\n              onChange={handleChange}\n            >\n              <option value={-1}>\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {hasHasUserIdError && (\n              <div\n                className=\"form__error\"\n              >\n                No user selected\n              </div>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"form__submit\"\n          >\n            Add\n          </button>\n        </form>\n        <TodoList todos={preparedTodos} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { PreparedTodo } from './types/PreparedTodo';\n\nexport function prepareTodos(\n  todos: Todo[],\n  users: User[],\n): PreparedTodo[] {\n  return todos.map((todo) => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId) || null,\n  }));\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}